<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ColorPicker" xml:space="preserve">
    <value>ColorPicker</value>
  </data>
  <data name="Picker" xml:space="preserve">
    <value>Picker</value>
  </data>
  <data name="Converter" xml:space="preserve">
    <value>Convertisseur</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Paramètres</value>
  </data>
  <data name="Hi" xml:space="preserve">
    <value>Bonjour</value>
  </data>
  <data name="GoodAfternoon" xml:space="preserve">
    <value>Bonne après-midi</value>
  </data>
  <data name="GoodNight" xml:space="preserve">
    <value>Bonne nuit</value>
  </data>
  <data name="GoodEvening" xml:space="preserve">
    <value>Bonne soirée</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copier</value>
  </data>
  <data name="Red" xml:space="preserve">
    <value>Rouge</value>
  </data>
  <data name="Green" xml:space="preserve">
    <value>Vert</value>
  </data>
  <data name="Blue" xml:space="preserve">
    <value>Bleu</value>
  </data>
  <data name="RGB" xml:space="preserve">
    <value>RGB</value>
  </data>
  <data name="HEX" xml:space="preserve">
    <value>HEX</value>
  </data>
  <data name="RedP" xml:space="preserve">
    <value>Rouge :</value>
  </data>
  <data name="GreenP" xml:space="preserve">
    <value>Vert :</value>
  </data>
  <data name="BlueP" xml:space="preserve">
    <value>Blue :</value>
  </data>
  <data name="SelectColor" xml:space="preserve">
    <value>Sélectionner une couleur</value>
  </data>
  <data name="HEXP" xml:space="preserve">
    <value>HEX :</value>
  </data>
  <data name="CopyRGB" xml:space="preserve">
    <value>Copier RGB</value>
  </data>
  <data name="CopyHEX" xml:space="preserve">
    <value>Copier HEX</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="ColorType" xml:space="preserve">
    <value>Type de couleur</value>
  </data>
  <data name="ColorValid" xml:space="preserve">
    <value>La couleur est valide.</value>
  </data>
  <data name="InvalidColor" xml:space="preserve">
    <value>La couleur est invalide.</value>
  </data>
  <data name="HSV" xml:space="preserve">
    <value>HSV</value>
  </data>
  <data name="H" xml:space="preserve">
    <value>H</value>
  </data>
  <data name="S" xml:space="preserve">
    <value>S</value>
  </data>
  <data name="V" xml:space="preserve">
    <value>V</value>
  </data>
  <data name="Updates" xml:space="preserve">
    <value>Mises à jour</value>
  </data>
  <data name="Install" xml:space="preserve">
    <value>Installer</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Thème</value>
  </data>
  <data name="Dark" xml:space="preserve">
    <value>Sombre</value>
  </data>
  <data name="Light" xml:space="preserve">
    <value>Clair</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Par défaut</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Appliquer</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Langue</value>
  </data>
  <data name="ChangeTheme" xml:space="preserve">
    <value>Changer le thème de ColorPicker.</value>
  </data>
  <data name="CheckUpdate" xml:space="preserve">
    <value>Rechercher des mises à jour</value>
  </data>
  <data name="ChangeLanguage" xml:space="preserve">
    <value>Changer la langue de ColorPicker.</value>
  </data>
  <data name="UpToDate" xml:space="preserve">
    <value>ColorPicker est à jour.</value>
  </data>
  <data name="InstallConfirmMsg" xml:space="preserve">
    <value>Pour installer les mises à jour, ColorPicker doit redémarrer. Voulez-vous continuer ?</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="InstallVersion" xml:space="preserve">
    <value>Installer la version</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>A propos</value>
  </data>
  <data name="AvailableUpdates" xml:space="preserve">
    <value>Des mises à jour sont disponibles.</value>
  </data>
  <data name="NeedRestartToApplyChanges" xml:space="preserve">
    <value>ColorPicker doit redémarrer pour appliquer les changements. Voulez-vous redémarrer maintenant ?</value>
  </data>
  <data name="Licenses" xml:space="preserve">
    <value>Licences</value>
  </data>
  <data name="SeeLicenses" xml:space="preserve">
    <value>Voir les licences</value>
  </data>
  <data name="CheckUpdatesOnStart" xml:space="preserve">
    <value>Rechercher des mises à jour lors du démarrage</value>
  </data>
  <data name="NotifyUpdates" xml:space="preserve">
    <value>Montrer une notification quand des mises à jour sont disponibles</value>
  </data>
  <data name="CheckUpdatesDisabledOnStart" xml:space="preserve">
    <value>La recherche de mises à jour lors du démarrage est désactivée.</value>
  </data>
  <data name="UnableToCheckUpdates" xml:space="preserve">
    <value>Impossible de rechercher des mises à jour</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Données</value>
  </data>
  <data name="ResetSettings" xml:space="preserve">
    <value>Réinitialiser les paramètres</value>
  </data>
  <data name="ResetSettingsConfirmMsg" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir réinitialiser tous les paramètres ?</value>
  </data>
  <data name="SettingsReset" xml:space="preserve">
    <value>Tous les paramètres ont été réinitialisés, ColorPicker va maintenant redémarrer.</value>
  </data>
  <data name="ShortcutsGuide" xml:space="preserve">
    <value>Appuyez sur Maj+S pour démarrer/arrêter la sélection. Appuyez sur Maj+C pour copier la couleur.</value>
  </data>
  <data name="CopyHSV" xml:space="preserve">
    <value>Copier HSV</value>
  </data>
  <data name="HSL" xml:space="preserve">
    <value>HSL</value>
  </data>
  <data name="L" xml:space="preserve">
    <value>L</value>
  </data>
  <data name="CopyHSL" xml:space="preserve">
    <value>Copier HSL</value>
  </data>
  <data name="CMYK" xml:space="preserve">
    <value>CMJN</value>
  </data>
  <data name="CopyCMYK" xml:space="preserve">
    <value>Copier CMJN</value>
  </data>
  <data name="C" xml:space="preserve">
    <value>C</value>
  </data>
  <data name="M" xml:space="preserve">
    <value>M</value>
  </data>
  <data name="Y" xml:space="preserve">
    <value>J</value>
  </data>
  <data name="K" xml:space="preserve">
    <value>N</value>
  </data>
  <data name="ColorFormatting" xml:space="preserve">
    <value>Format de couleur</value>
  </data>
  <data name="RGBSeparator" xml:space="preserve">
    <value>Séparateur RGB</value>
  </data>
  <data name="ColorFormattingDesc" xml:space="preserve">
    <value>Options de format de couleur.</value>
  </data>
  <data name="InvalidValueRGB" xml:space="preserve">
    <value>Veuillez entrer une valeur valide.</value>
  </data>
  <data name="UseUpperCaseHEX" xml:space="preserve">
    <value>Utiliser des majuscules pour les couleurs HEX</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Importer les paramètres</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Exporter les paramètres</value>
  </data>
  <data name="SettingsExportedSucessMsg" xml:space="preserve">
    <value>Les paramètres ont été exportés avec succès.</value>
  </data>
  <data name="SettingsImportedMsg" xml:space="preserve">
    <value>Les paramètres ont été importés avec succès. Pour finir le processus, ColorPicker va redémarrer.</value>
  </data>
  <data name="KeyboardShortcuts" xml:space="preserve">
    <value>Raccourcis clavier</value>
  </data>
  <data name="UseKeyboardShortcuts" xml:space="preserve">
    <value>Utiliser les raccourcis clavier</value>
  </data>
  <data name="System" xml:space="preserve">
    <value>Système</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>Historique</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Fermer</value>
  </data>
  <data name="Minimize" xml:space="preserve">
    <value>Minimiser</value>
  </data>
  <data name="PickRandomColor" xml:space="preserve">
    <value>Générer une couleur aléatoire</value>
  </data>
  <data name="Palette" xml:space="preserve">
    <value>Palette</value>
  </data>
  <data name="Shades" xml:space="preserve">
    <value>Nuances</value>
  </data>
  <data name="Brightness" xml:space="preserve">
    <value>Luminosité</value>
  </data>
  <data name="AddToHistory" xml:space="preserve">
    <value>Ajouter à l'historique</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="Regenerate" xml:space="preserve">
    <value>Regénérer</value>
  </data>
  <data name="RestoreColorHistory" xml:space="preserve">
    <value>Restaurer l'historique des couleurs lors du démarrage</value>
  </data>
  <data name="RestorePaletteHistory" xml:space="preserve">
    <value>Restaurer l'historique des palettes de couleurs lors du démarrage</value>
  </data>
  <data name="Pin" xml:space="preserve">
    <value>Épingler</value>
  </data>
  <data name="Unpin" xml:space="preserve">
    <value>Désépingler</value>
  </data>
  <data name="ColorWheel" xml:space="preserve">
    <value>Roue chromatique</value>
  </data>
</root>