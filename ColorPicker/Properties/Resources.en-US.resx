<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
	Microsoft ResX Schema 
	
	Version 2.0
	
	The primary goals of this format is to allow a simple XML format 
	that is mostly human readable. The generation and parsing of the 
	various data types are done through the TypeConverter classes 
	associated with the data types.
	
	Example:
	
	... ado.net/XML headers & schema ...
	<resheader name="resmimetype">text/microsoft-resx</resheader>
	<resheader name="version">2.0</resheader>
	<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
	<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
	<data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
	<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
	<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
		<value>[base64 mime encoded serialized .NET Framework object]</value>
	</data>
	<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
		<value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
		<comment>This is a comment</comment>
	</data>
				
	There are any number of "resheader" rows that contain simple 
	name/value pairs.
	
	Each data row contains a name, and value. The row also contains a 
	type or mimetype. Type corresponds to a .NET class that support 
	text/value conversion through the TypeConverter architecture. 
	Classes that don't support this are serialized and stored with the 
	mimetype set.
	
	The mimetype is used for serialized objects, and tells the 
	ResXResourceReader how to depersist the object. This is currently not 
	extensible. For a given mimetype the value must be set accordingly:
	
	Note - application/x-microsoft.net.object.binary.base64 is the format 
	that the ResXResourceWriter will generate, however the reader can 
	read any of the formats listed below.
	
	mimetype: application/x-microsoft.net.object.binary.base64
	value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.
	
	mimetype: application/x-microsoft.net.object.soap.base64
	value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

	mimetype: application/x-microsoft.net.object.bytearray.base64
	value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ColorPicker" xml:space="preserve">
	<value>ColorPicker</value>
  </data>
  <data name="Hi" xml:space="preserve">
	<value>Hi</value>
  </data>
  <data name="GoodAfternoon" xml:space="preserve">
	<value>Good afternoon</value>
  </data>
  <data name="GoodNight" xml:space="preserve">
	<value>Good night</value>
  </data>
  <data name="GoodEvening" xml:space="preserve">
	<value>Good evening</value>
  </data>
  <data name="Pinned" xml:space="preserve">
	<value>Pinned</value>
  </data>
  <data name="Home" xml:space="preserve">
	<value>Home</value>
  </data>
  <data name="Settings" xml:space="preserve">
	<value>Settings</value>
  </data>
  <data name="History" xml:space="preserve">
	<value>History</value>
  </data>
  <data name="Tools" xml:space="preserve">
	<value>Tools</value>
  </data>
  <data name="Details" xml:space="preserve">
	<value>Details</value>
  </data>
  <data name="Selector" xml:space="preserve">
	<value>Selector</value>
  </data>
  <data name="Picker" xml:space="preserve">
	<value>Picker</value>
  </data>
  <data name="RGB" xml:space="preserve">
	<value>RGB</value>
  </data>
  <data name="HEX" xml:space="preserve">
	<value>HEX</value>
  </data>
  <data name="HSV" xml:space="preserve">
	<value>HSV</value>
  </data>
  <data name="HSL" xml:space="preserve">
	<value>HSL</value>
  </data>
  <data name="CMYK" xml:space="preserve">
	<value>CMYK</value>
  </data>
  <data name="XYZ" xml:space="preserve">
	<value>XYZ</value>
  </data>
  <data name="YIQ" xml:space="preserve">
	<value>YIQ</value>
  </data>
  <data name="YUV" xml:space="preserve">
	<value>YUV</value>
  </data>
  <data name="Bookmarks" xml:space="preserve">
	<value>Bookmarks</value>
  </data>
  <data name="ColorPickerMax" xml:space="preserve">
	<value>ColorPicker Max</value>
  </data>
  <data name="ChromaticWheel" xml:space="preserve">
	<value>Chromatic wheel</value>
  </data>
  <data name="ColorTools" xml:space="preserve">
	<value>Color Tools</value>
  </data>
  <data name="Creation" xml:space="preserve">
	<value>Creation</value>
  </data>
  <data name="Converter" xml:space="preserve">
	<value>Converter</value>
  </data>
  <data name="TextTool" xml:space="preserve">
	<value>Text</value>
  </data>
  <data name="Palette" xml:space="preserve">
	<value>Palette</value>
  </data>
  <data name="Gradient" xml:space="preserve">
	<value>Gradient</value>
  </data>
  <data name="Circle" xml:space="preserve">
	<value>Circle</value>
  </data>
  <data name="Disc" xml:space="preserve">
	<value>Disc</value>
  </data>
  <data name="Shades" xml:space="preserve">
	<value>Shades</value>
  </data>
  <data name="ColorValid" xml:space="preserve">
	<value>The color is valid.</value>
  </data>
  <data name="InvalidColor" xml:space="preserve">
	<value>The color is invalid.</value>
  </data>
  <data name="Font" xml:space="preserve">
	<value>Font</value>
  </data>
  <data name="Size" xml:space="preserve">
	<value>Size</value>
  </data>
  <data name="Foreground" xml:space="preserve">
	<value>Foreground</value>
  </data>
  <data name="Background" xml:space="preserve">
	<value>Background</value>
  </data>
  <data name="Contrast" xml:space="preserve">
	<value>Contrast</value>
  </data>
  <data name="Brightness" xml:space="preserve">
	<value>Brightness</value>
  </data>
  <data name="Hues" xml:space="preserve">
	<value>Hues</value>
  </data>
  <data name="From" xml:space="preserve">
	<value>From</value>
  </data>
  <data name="To" xml:space="preserve">
	<value>To</value>
  </data>
  <data name="Rotation" xml:space="preserve">
	<value>Rotation</value>
  </data>
  <data name="DevTools" xml:space="preserve">
	<value>Developer tools</value>
  </data>
  <data name="CSS" xml:space="preserve">
	<value>CSS</value>
  </data>
  <data name="GetStarted" xml:space="preserve">
	<value>Get started</value>
  </data>
  <data name="SuggestedActions" xml:space="preserve">
	<value>Suggested actions</value>
  </data>
  <data name="Discover" xml:space="preserve">
	<value>Discover</value>
  </data>
  <data name="SelectColor" xml:space="preserve">
	<value>Select a color</value>
  </data>
  <data name="SelectChomaticDisc" xml:space="preserve">
	<value>Select from the chromatic disc</value>
  </data>
  <data name="ConvertFromRGB" xml:space="preserve">
	<value>Convert from RGB</value>
  </data>
  <data name="GetContrast" xml:space="preserve">
	<value>Get contrast ratio</value>
  </data>
  <data name="GeneratePalette" xml:space="preserve">
	<value>Generate a palette</value>
  </data>
  <data name="GenerateGradient" xml:space="preserve">
	<value>Generate a gradient</value>
  </data>
  <data name="RedP" xml:space="preserve">
	<value>R</value>
  </data>
  <data name="GreenP" xml:space="preserve">
	<value>G</value>
  </data>
  <data name="BlueP" xml:space="preserve">
	<value>B</value>
  </data>
  <data name="EmptyBookmarks" xml:space="preserve">
	<value>Empty bookmarks</value>
  </data>
  <data name="Colors" xml:space="preserve">
	<value>Colors</value>
  </data>
  <data name="Gradients" xml:space="preserve">
	<value>Gradients</value>
  </data>
  <data name="Palettes" xml:space="preserve">
	<value>Palettes</value>
  </data>
  <data name="EmptyHistoryMsg" xml:space="preserve">
	<value>Are you sure want to empty these bookmarks? This action is irreversible.</value>
  </data>
  <data name="CheckUpdate" xml:space="preserve">
	<value>Check for updates</value>
  </data>
  <data name="Updates" xml:space="preserve">
	<value>Updates</value>
  </data>
  <data name="Install" xml:space="preserve">
	<value>Install</value>
  </data>
  <data name="Theme" xml:space="preserve">
	<value>Theme</value>
  </data>
  <data name="Light" xml:space="preserve">
	<value>Light</value>
  </data>
  <data name="Dark" xml:space="preserve">
	<value>Dark</value>
  </data>
  <data name="Licenses" xml:space="preserve">
	<value>Licenses</value>
  </data>
  <data name="Apply" xml:space="preserve">
	<value>Apply</value>
  </data>
  <data name="SeeLicenses" xml:space="preserve">
	<value>See licenses</value>
  </data>
  <data name="ChangeTheme" xml:space="preserve">
	<value>Change ColorPicker theme.</value>
  </data>
  <data name="Language" xml:space="preserve">
	<value>Language</value>
  </data>
  <data name="NeedRestartToApplyChanges" xml:space="preserve">
	<value>ColorPicker needs to restart to apply the changes. Do you want to restart now?</value>
  </data>
  <data name="Default" xml:space="preserve">
	<value>Default</value>
  </data>
  <data name="UpToDate" xml:space="preserve">
	<value>ColorPicker is up to date.</value>
  </data>
  <data name="AvailableUpdates" xml:space="preserve">
	<value>Updates are available.</value>
  </data>
  <data name="InstallConfirmMsg" xml:space="preserve">
	<value>To install updates, ColorPicker needs to restarts. Do you want to continue?</value>
  </data>
  <data name="InstallVersion" xml:space="preserve">
	<value>Install version</value>
  </data>
  <data name="Version" xml:space="preserve">
	<value>Version</value>
  </data>
  <data name="ChangeLanguage" xml:space="preserve">
	<value>Change the language of ColorPicker.</value>
  </data>
  <data name="NotifyUpdates" xml:space="preserve">
	<value>Show a notification when updates are available</value>
  </data>
  <data name="Notifications" xml:space="preserve">
	<value>Notifications</value>
  </data>
  <data name="NotificationsDescription" xml:space="preserve">
	<value>Notifications settings.</value>
  </data>
  <data name="CheckUpdatesOnStart" xml:space="preserve">
	<value>Check for updates on start</value>
  </data>
  <data name="StartupPage" xml:space="preserve">
	<value>Default page on start</value>
  </data>
  <data name="OnStart" xml:space="preserve">
	<value>On start</value>
  </data>
  <data name="OnStartDescription" xml:space="preserve">
	<value>Settings that applies on start.</value>
  </data>
  <data name="DataPrivacy" xml:space="preserve">
	<value>Data and Privacy</value>
  </data>
  <data name="DataDescription" xml:space="preserve">
	<value>Manage your data and your privacy.</value>
  </data>
  <data name="Import" xml:space="preserve">
	<value>Import settings</value>
  </data>
  <data name="Export" xml:space="preserve">
	<value>Export settings</value>
  </data>
  <data name="SettingsExportedSucessMsg" xml:space="preserve">
	<value>Settings have been sucessfully exported.</value>
  </data>
  <data name="SettingsImportedMsg" xml:space="preserve">
	<value>Settings were sucessfully imported. To finish the process, ColorPicker is going to restart.</value>
  </data>
  <data name="ResetSettings" xml:space="preserve">
	<value>Reset settings</value>
  </data>
  <data name="SynethiaEnable" xml:space="preserve">
	<value>Enable Synethia customized experience.</value>
  </data>
  <data name="ResetSynethia" xml:space="preserve">
	<value>Reset Synethia data</value>
  </data>
  <data name="ResetSettingsConfirmation" xml:space="preserve">
	<value>Are you sure you want to reset all settings?</value>
  </data>
  <data name="SynethiaDeleteMsg" xml:space="preserve">
	<value>Are you sure you want to reset all Synethia data? Your personalized experience will be lost; This action cannot be canceled.</value>
  </data>
  <data name="ColorOptions" xml:space="preserve">
	<value>Color Options</value>
  </data>
  <data name="DefaultColorType" xml:space="preserve">
	<value>Default color type</value>
  </data>
  <data name="ColorOptionsDesc" xml:space="preserve">
	<value>The way ColorPicker handle colors.</value>
  </data>
  <data name="KeyboardShortcuts" xml:space="preserve">
	<value>Keyboard shortcuts</value>
  </data>
  <data name="UseKeyboardShortcuts" xml:space="preserve">
	<value>Use keyboard shortcuts</value>
  </data>
  <data name="EditShortcut" xml:space="preserve">
	<value>Edit shortcut</value>
  </data>
  <data name="PressKeys" xml:space="preserve">
	<value>Press a combination of keys.</value>
  </data>
  <data name="NeedRestartLabel" xml:space="preserve">
	<value>ColorPicker needs to restart to apply the changes.</value>
  </data>
  <data name="ResetKeyboardShortcuts" xml:space="preserve">
	<value>Reset keyboard shortcuts</value>
  </data>
  <data name="StartSelection" xml:space="preserve">
	<value>Start selection</value>
  </data>
  <data name="CopyColor" xml:space="preserve">
	<value>Copy color</value>
  </data>
  <data name="TextToolDesc" xml:space="preserve">
	<value>Text tool settings.</value>
  </data>
  <data name="Max" xml:space="preserve">
	<value>Max</value>
  </data>
  <data name="FirstRunQuitMsg" xml:space="preserve">
	<value>Do you want to ignore this window and continue to ColorPicker?</value>
  </data>
  <data name="Next" xml:space="preserve">
	<value>Next</value>
  </data>
  <data name="Skip" xml:space="preserve">
	<value>Skip</value>
  </data>
  <data name="Features" xml:space="preserve">
	<value>Features</value>
  </data>
  <data name="Agree" xml:space="preserve">
	<value>I agree</value>
  </data>
  <data name="NoThanks" xml:space="preserve">
	<value>No thanks</value>
  </data>
  <data name="IntroducingSynethia" xml:space="preserve">
	<value>Introducing Synethia</value>
  </data>
  <data name="SynethiaInfo" xml:space="preserve">
	<value>Synethia is an algorithm that personnalizes your experience.</value>
  </data>
  <data name="SynethiaDataInfo" xml:space="preserve">
	<value>Synethia collects data in ColorPicker only</value>
  </data>
  <data name="SynethiaAnalyze" xml:space="preserve">
	<value>Synethia will then analyze this data to provide a unique experience</value>
  </data>
  <data name="SynethiaHome" xml:space="preserve">
	<value>The Home dashbord will recommand actions based on your usage</value>
  </data>
  <data name="SynethiaPrivacy" xml:space="preserve">
	<value>Your data is stored on your device, anonymously. Absolutely NO data is sent to Léo Corporation.</value>
  </data>
  <data name="LetsGo" xml:space="preserve">
	<value>Let's go!</value>
  </data>
  <data name="WelcomeReady" xml:space="preserve">
	<value>Everyting is ready</value>
  </data>
  <data name="SelectorInfo" xml:space="preserve">
    <value>The selector feature of ColorPicker enables you to choose any color from the screen by moving the cursor over it and pressing a keyboard shortcut. The chosen color will be shown in a preview box and its code will be copied to the clipboard in a desired color type.</value>
  </data>
  <data name="ConverterInfo" xml:space="preserve">
    <value>The converter feature of ColorPicker allows you to convert any color type to another one. The color types are RGB, HEX, HSV, HSL, CMYK, XYZ, YIQ and YUV. You can enter a color code in any of these formats and see the corresponding codes in the other formats.</value>
  </data>
  <data name="GradientInfo" xml:space="preserve">
    <value>The gradient feature of ColorPicker lets you generate random two-stops gradients with a specific rotation angle. You can see a preview of the gradient and its CSS code. You can also export the gradient to CSS code and use it in your web design projects.</value>
  </data>
  <data name="WelcomeDesc" xml:space="preserve">
    <value>Welcome to ColorPicker, the ultimate tool for picking, converting and generating colors.</value>
  </data>
  <data name="XAML" xml:space="preserve">
    <value>XAML</value>
  </data>
  <data name="KeyboardSelectionHint" xml:space="preserve">
    <value>Press {0} to start or stop selecting a color from your screen.</value>
  </data>
  <data name="CopyRGB" xml:space="preserve">
    <value>Copy RGB</value>
  </data>
  <data name="CopyHEX" xml:space="preserve">
    <value>Copy HEX</value>
  </data>
  <data name="CopyHSL" xml:space="preserve">
    <value>Copy HSL</value>
  </data>
  <data name="CopyHSV" xml:space="preserve">
    <value>Copy HSV</value>
  </data>
  <data name="CopyXYZ" xml:space="preserve">
    <value>Copy XYZ</value>
  </data>
  <data name="CopyYIQ" xml:space="preserve">
    <value>Copy YIQ</value>
  </data>
  <data name="CopyYUV" xml:space="preserve">
    <value>Copy YUV</value>
  </data>
  <data name="CopyCMYK" xml:space="preserve">
    <value>Copy CMYK</value>
  </data>
  <data name="GenerateColor" xml:space="preserve">
    <value>Generate a random color</value>
  </data>
  <data name="AddBookmark" xml:space="preserve">
    <value>Add to bookmarks</value>
  </data>
  <data name="RemoveBookmark" xml:space="preserve">
    <value>Remove from bookmarks</value>
  </data>
  <data name="GenerateTextColors" xml:space="preserve">
    <value>Generate new colors</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="AIGeneration" xml:space="preserve">
    <value>AI Generation</value>
  </data>
  <data name="AIGenerateColor" xml:space="preserve">
    <value>Generate colors with AI</value>
  </data>
  <data name="AISettings" xml:space="preserve">
    <value>Customize AI Generation settings.</value>
  </data>
  <data name="OpenAIKey" xml:space="preserve">
    <value>OpenAI API Key</value>
  </data>
  <data name="Generate" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="ProvideAPromptMsg" xml:space="preserve">
    <value>Please provide a prompt to AI.</value>
  </data>
  <data name="ProvideAPIKey" xml:space="preserve">
    <value>Please define an API Key in settings.</value>
  </data>
  <data name="SingleColor" xml:space="preserve">
    <value>Single color</value>
  </data>
  <data name="Model" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="NoApiKeyMsg" xml:space="preserve">
    <value>To use AI featues, you need an OpenAI API key.</value>
  </data>
  <data name="Decimal" xml:space="preserve">
    <value>Decimal</value>
  </data>
  <data name="DEC" xml:space="preserve">
    <value>DEC</value>
  </data>
  <data name="CopyDEC" xml:space="preserve">
    <value>Copy Decimal</value>
  </data>
  <data name="AiPrompts" xml:space="preserve">
    <value>Ocean Breeze,Crimson Sunset,Enchanted Forest,Electric Dreams,Desert Mirage,Midnight Serenade,Neon Galaxy,Golden Harvest,Lavender Mist,Tropical Paradise,Fire and Ice,Mystic Moonlight,Emerald Elegance,Cherry Blossom,Aurora Australis,Steel City Lights,Vintage Romance,Sapphire Dreams,Amber Afterglow,Velvet Touch,Dandelion Wishes,Urban Jungle,Rose Petal Whispers,Icy Tundra,Chocolate Delight,Harbor Reflections,Whispering Wind,Vibrant Spectrum,Pastel Reverie,Moonlit Meadow</value>
  </data>
  <data name="GetIdeas" xml:space="preserve">
    <value>Get ideas</value>
  </data>
  <data name="EditInSelector" xml:space="preserve">
    <value>Edit in Selector</value>
  </data>
  <data name="Convert" xml:space="preserve">
    <value>Convert</value>
  </data>
  <data name="Harmonies" xml:space="preserve">
    <value>Harmonies</value>
  </data>
  <data name="GetHarmonies" xml:space="preserve">
    <value>Get harmonies</value>
  </data>
  <data name="Complementary" xml:space="preserve">
    <value>Complementary</value>
  </data>
  <data name="SplitComplementary" xml:space="preserve">
    <value>Split Complementary</value>
  </data>
  <data name="Triadic" xml:space="preserve">
    <value>Triadic</value>
  </data>
  <data name="Analogous" xml:space="preserve">
    <value>Analogous</value>
  </data>
  <data name="Monochromatic" xml:space="preserve">
    <value>Monochromatic</value>
  </data>
  <data name="PortableNoAutoUpdates" xml:space="preserve">
    <value>Automatic updates are not available in portable mode, please download ColorPicker Max again.</value>
  </data>
  <data name="EmptyAiPlaceholder" xml:space="preserve">
    <value>Enter a prompt to generate colors using the power of AI</value>
  </data>
  <data name="RgbSeparator" xml:space="preserve">
    <value>RGB Separator</value>
  </data>
  <data name="Angle" xml:space="preserve">
    <value>Angle</value>
  </data>
  <data name="Steps" xml:space="preserve">
    <value>Steps</value>
  </data>
</root>