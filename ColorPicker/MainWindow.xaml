<Window x:Class="ColorPicker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ColorPicker"
		xmlns:lang="clr-namespace:ColorPicker.Properties"
		FontFamily="/Fonts/#Montserrat"
        mc:Ignorable="d"
        Title="{x:Static lang:Resources.ColorPicker}" Height="450" Width="800" WindowStartupLocation="CenterScreen" WindowStyle="None" ResizeMode="NoResize" Background="Transparent" AllowsTransparency="True">

	<WindowChrome.WindowChrome>
		<WindowChrome CaptionHeight="32" ResizeBorderThickness="10"/>
	</WindowChrome.WindowChrome>

	<Window.Resources>
		<Style x:Key="WindowMainPanelStyle" TargetType="{x:Type Border}">
			<Setter Property="BorderBrush" Value="{DynamicResource WindowBorderBrush}" />
			<Setter Property="BorderThickness" Value="1" />
			<Style.Triggers>
				<!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
					<Setter Property="Margin" Value="6 0 6 0" />
				</DataTrigger>-->
			</Style.Triggers>
		</Style>
		<Style x:Key="TitleBarButtonStyle" TargetType="Button">
			<Setter Property="Foreground" Value="White" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="Height" Value="32"/>
			<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
			<Setter Property="IsTabStop" Value="False" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border
					x:Name="border"
					Background="{TemplateBinding Background}"
					BorderThickness="0" CornerRadius="5"
					SnapsToDevicePixels="true">
							<ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="border" Property="Background" Value="{Binding Source={StaticResource WindowButtonsHover1}}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="border" Property="Background" Value="{Binding Source={StaticResource WindowButtonsPressed1}}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
			<Setter Property="Foreground" Value="White" />
			<Setter Property="Height" Value="32"/>
			<Setter Property="Padding" Value="0" />
			<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
			<Setter Property="IsTabStop" Value="False" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0" CornerRadius="5"
					SnapsToDevicePixels="true">
							<ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="border" Property="Background" Value="Red" />
								<Setter Property="Foreground" Value="White" />
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="border" Property="Background" Value="Red" />
								<Setter Property="Foreground" Value="White" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>

	<Window.Effect>
		<DropShadowEffect Color="Black" ShadowDepth="0" BlurRadius="10" Opacity="0.4" RenderingBias="Quality"/>
	</Window.Effect>

	<Border Name="WindowBorder" Margin="10" BorderThickness="0" Background="{Binding Source={StaticResource Background1}}" CornerRadius="5">
		<Grid VerticalAlignment="Top">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>

			<Border Height="Auto" Style="{StaticResource WindowMainPanelStyle}">
				<Grid Height="32" VerticalAlignment="Top">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>

					<Button Grid.Column="1" FontSize="14" Content="&#xFC75;" FontFamily="/Fonts/#FluentSystemIcons-Regular" Name="MinimizeBtn" Click="MinimizeBtn_Click" RenderOptions.EdgeMode="Aliased" Style="{StaticResource TitleBarButtonStyle}" Background="Transparent" Width="46" Height="32" Foreground="{Binding Source={StaticResource Foreground1}}">
						<Button.ToolTip>
							<ToolTip Content="{x:Static lang:Resources.Minimize}" Foreground="{Binding Source={StaticResource Foreground1}}" Background="{Binding Source={StaticResource Background1}}"/>
						</Button.ToolTip>
					</Button>
					<Button Grid.Column="2" FontSize="14" Content="&#xF36B;" FontFamily="/Fonts/#FluentSystemIcons-Regular" Name="CloseBtn" Click="CloseBtn_Click" RenderOptions.EdgeMode="Aliased" Style="{StaticResource TitleBarCloseButtonStyle}" Background="Transparent" Width="46" Height="32" Foreground="{Binding Source={StaticResource Foreground1}}">
						<Button.ToolTip>
							<ToolTip Content="{x:Static lang:Resources.Close}" Foreground="{Binding Source={StaticResource Foreground1}}" Background="{Binding Source={StaticResource Background1}}"/>
						</Button.ToolTip>
					</Button>
				</Grid>
			</Border>

			<Border Grid.Row="1" Style="{StaticResource WindowMainPanelStyle}">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>

					<Grid x:Name="Header">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>

						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<StackPanel HorizontalAlignment="Left">
							<TextBlock Grid.Row="0" FontWeight="Bold"  Foreground="{Binding Source={StaticResource Foreground1}}" FontSize="48" Text="{x:Static lang:Resources.ColorPicker}" Margin="20,0,0,0"/>
							<TextBlock x:Name="HelloTxt" Grid.Row="0" FontWeight="Regular"  Foreground="{Binding Source={StaticResource Foreground1}}" FontSize="16" d:Text="[HelloMessage]" Margin="20,0,0,0"/>
						</StackPanel>
						<Image Margin="5,0,5,5" Grid.Column="1" Height="80" Source="{Binding Source={StaticResource MainWindowBackground}}" Stretch="UniformToFill" HorizontalAlignment="Right"/>
					</Grid>

					<Grid x:Name="WindowContent" Grid.Row="1">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>

						<StackPanel Margin="10" Grid.Column="0">
							<Button Click="PickerTabBtn_Click" x:Name="PickerTabBtn" Margin="5" Background="{Binding Source={StaticResource Background1}}" Foreground="{Binding Source={StaticResource Foreground1}}" FontWeight="Bold" Padding="8" Style="{DynamicResource TabButtonStyle}" FontSize="20" HorizontalAlignment="Left" Width="200" HorizontalContentAlignment="Left" MouseEnter="TabEnter" MouseLeave="TabLeave" Cursor="Hand">
								<StackPanel Orientation="Horizontal">
									<TextBlock x:Name="PickerIcon" Text="&#xF2F6;" FontSize="23" FontWeight="Regular" FontFamily="/Fonts/#FluentSystemIcons-Regular" Margin="0 0 10 0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
									<TextBlock Text="{x:Static lang:Resources.Picker}" VerticalAlignment="Center"/>
								</StackPanel>
								<Button.ToolTip>
									<ToolTip Content="{x:Static lang:Resources.Picker}" Foreground="{Binding Source={StaticResource Foreground1}}" Background="{Binding Source={StaticResource Background1}}"/>
								</Button.ToolTip>
								<Button.Triggers>
									<EventTrigger RoutedEvent="MouseEnter">
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation From="15" To="20" Duration="0:0:0.2" Storyboard.TargetName="PickerIcon" Storyboard.TargetProperty="FontSize"/>
												<ColorAnimation From="{Binding Source={StaticResource Background1}}" To="{Binding Source={StaticResource AccentColor}}" Duration="0:0:0.2" Storyboard.TargetName="PickerTabBtn" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"/>
											</Storyboard>
										</BeginStoryboard>
									</EventTrigger>
								</Button.Triggers>
							</Button>
							<Button Click="ConverterTabBtn_Click" x:Name="ConverterTabBtn" Margin="5" Background="{Binding Source={StaticResource Background1}}" Foreground="{Binding Source={StaticResource Foreground1}}" FontWeight="Bold" Padding="8" Style="{DynamicResource TabButtonStyle}" FontSize="20" HorizontalAlignment="Left" Width="200" HorizontalContentAlignment="Left" MouseEnter="TabEnter" MouseLeave="TabLeave">
								<StackPanel Orientation="Horizontal">
									<TextBlock x:Name="ConvertIcon" Text="&#xF18E;" FontSize="23" FontWeight="Regular" FontFamily="/Fonts/#FluentSystemIcons-Regular" Margin="0 0 10 0" VerticalAlignment="Center"/>
									<TextBlock Text="{x:Static lang:Resources.Converter}" VerticalAlignment="Center"/>
								</StackPanel>
								<Button.ToolTip>
									<ToolTip Content="{x:Static lang:Resources.Converter}" Foreground="{Binding Source={StaticResource Foreground1}}" Background="{Binding Source={StaticResource Background1}}"/>
								</Button.ToolTip>
								<Button.Triggers>
									<EventTrigger RoutedEvent="MouseEnter">
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation From="15" To="20" Duration="0:0:0.2" Storyboard.TargetName="ConvertIcon" Storyboard.TargetProperty="FontSize"/>
												<ColorAnimation From="{Binding Source={StaticResource Background1}}" To="{Binding Source={StaticResource AccentColor}}" Duration="0:0:0.2" Storyboard.TargetName="ConverterTabBtn" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"/>
											</Storyboard>
										</BeginStoryboard>
									</EventTrigger>
								</Button.Triggers>
							</Button>
							<Button Click="SettingsTabBtn_Click" x:Name="SettingsTabBtn" Margin="5" Background="{Binding Source={StaticResource Background1}}" Foreground="{Binding Source={StaticResource Foreground1}}" FontWeight="Bold" Padding="8" Style="{DynamicResource TabButtonStyle}" FontSize="20" HorizontalAlignment="Left" Width="200" HorizontalContentAlignment="Left" MouseEnter="TabEnter" MouseLeave="TabLeave" Cursor="Hand">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="&#xF6AB;" FontSize="23" FontWeight="Regular" FontFamily="/Fonts/#FluentSystemIcons-Regular" Margin="0 0 10 0" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
										<TextBlock.RenderTransform>
											<TransformGroup>
												<RotateTransform x:Name="Rotator" Angle="0"/>
											</TransformGroup>
										</TextBlock.RenderTransform>
									</TextBlock>
									<TextBlock Text="{x:Static lang:Resources.Settings}" VerticalAlignment="Center"/>
								</StackPanel>
								<Button.ToolTip>
									<ToolTip Content="{x:Static lang:Resources.Settings}" Foreground="{Binding Source={StaticResource Foreground1}}" Background="{Binding Source={StaticResource Background1}}"/>
								</Button.ToolTip>
								<Button.Triggers>
									<EventTrigger RoutedEvent="MouseEnter">
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation From="0" To="45" Duration="0:0:0.2" Storyboard.TargetName="Rotator" Storyboard.TargetProperty="Angle"/>
												<ColorAnimation From="{Binding Source={StaticResource Background1}}" To="{Binding Source={StaticResource AccentColor}}" Duration="0:0:0.2" Storyboard.TargetName="SettingsTabBtn" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"/>
											</Storyboard>
										</BeginStoryboard>
									</EventTrigger>
									<EventTrigger RoutedEvent="MouseLeave">
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation From="45" To="0" Duration="0:0:0.2" Storyboard.TargetName="Rotator" Storyboard.TargetProperty="Angle"/>
											</Storyboard>
										</BeginStoryboard>
									</EventTrigger>
								</Button.Triggers>
							</Button>
						</StackPanel>

						<Frame Name="PageContent" Grid.Column="1" NavigationUIVisibility="Hidden"/>
					</Grid>
				</Grid>
			</Border>
		</Grid>
	</Border>
</Window>
