<Application
    x:Class="ColorPicker.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ColorPicker"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    Startup="Application_Startup">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Themes/Light.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="PrimaryButton" TargetType="{x:Type Button}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource AccentColor}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="White" />

                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource AccentColor}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Gray}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="StandardButton" TargetType="{x:Type Button}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource Background1}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="White" />

                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Gray}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DefaultButton" TargetType="{x:Type Button}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource LightAccentColor}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource LightAccentColor}" />
                                    <!--<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>-->
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource LightAccentColor}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource LightAccentColor}" />
                                    <!--<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>-->
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Gray}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="NavBarButton" TargetType="{x:Type RadioButton}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Border
                                x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource Background1}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="White" />

                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource Background1}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentColor}" />
                                    <Setter TargetName="border" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect
                                                BlurRadius="10"
                                                Direction="270"
                                                Opacity="0.1"
                                                ShadowDepth="0"
                                                Color="{DynamicResource Accent}" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Gray}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="NavBarToolButton" TargetType="{x:Type RadioButton}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Border
                                x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource AccentColor}" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource WindowButtonsHoverForeground1}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource LightAccentColor}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource LightAccentColor}" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource AccentColor}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource LightAccentColor}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource LightAccentColor}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Gray}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToolButton" TargetType="{x:Type Button}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource Background2}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Background2}" />
                                    <!--<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>-->
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource Background2}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Background2}" />
                                    <!--<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>-->
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Gray}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070" />
            <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121" />
            <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="Transparent" />
            <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="{DynamicResource Accent}" />
            <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="{DynamicResource Accent}" />
            <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="Transparent" />
            <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="{DynamicResource Accent}" />
            <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="{DynamicResource Accent}" />
            <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6" />
            <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC" />
            <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070" />
            <Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
                <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid
                                x:Name="templateRoot"
                                Background="Transparent"
                                SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border
                                    x:Name="radioButtonBorder"
                                    Margin="1 1 2 1"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="100">
                                    <Grid x:Name="markGrid" Margin="2">
                                        <Ellipse
                                            x:Name="optionMark"
                                            MinWidth="6"
                                            MinHeight="6"
                                            Fill="{DynamicResource AccentColor}"
                                            Opacity="0" />
                                    </Grid>
                                </Border>
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="Padding" Value="4 -1 0 0" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.MouseOver.Background}" />
                                    <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.MouseOver.Border}" />
                                    <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.MouseOver.Glyph}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.Disabled.Background}" />
                                    <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.Disabled.Border}" />
                                    <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.Disabled.Glyph}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.Pressed.Background}" />
                                    <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.Pressed.Border}" />
                                    <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.Pressed.Glyph}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="optionMark" Property="Opacity" Value="0.56" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DefaultToggleButton" TargetType="{x:Type RadioButton}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Border
                                x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource LightAccentColor}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource LightAccentColor}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource LightAccentColor}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource LightAccentColor}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource LightAccentColor}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource LightAccentColor}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Gray}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Fill="{TemplateBinding Background}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="VerticalThumb" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="4" />
                                    <RowDefinition Height="4" />
                                    <RowDefinition />
                                    <RowDefinition Height="4" />
                                    <RowDefinition Height="4" />
                                </Grid.RowDefinitions>
                                <Ellipse
                                    Grid.Row="0"
                                    Grid.RowSpan="2"
                                    Fill="{DynamicResource Gray}" />
                                <Rectangle
                                    Grid.Row="1"
                                    Grid.RowSpan="3"
                                    Fill="{DynamicResource Gray}" />
                                <Ellipse
                                    Grid.Row="3"
                                    Grid.RowSpan="2"
                                    Fill="{DynamicResource Gray}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HorizontalThumb" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4" />
                                    <ColumnDefinition Width="4" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="4" />
                                    <ColumnDefinition Width="4" />
                                </Grid.ColumnDefinitions>
                                <Ellipse
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Fill="{DynamicResource Gray}" />
                                <Rectangle
                                    Grid.Column="1"
                                    Grid.ColumnSpan="3"
                                    Fill="{DynamicResource Gray}" />
                                <Ellipse
                                    Grid.Column="3"
                                    Grid.ColumnSpan="2"
                                    Fill="{DynamicResource Gray}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Rectangle
                                    x:Name="Corner"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <ScrollContentPresenter
                                    x:Name="PART_ScrollContentPresenter"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Margin="{TemplateBinding Padding}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                                <ScrollBar
                                    x:Name="PART_VerticalScrollBar"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    AutomationProperties.AutomationId="VerticalScrollBar"
                                    Cursor="Arrow"
                                    Maximum="{TemplateBinding ScrollableHeight}"
                                    Minimum="0"
                                    Style="{DynamicResource ViewerSrollBar}"
                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                    Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ScrollBar
                                    x:Name="PART_HorizontalScrollBar"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    AutomationProperties.AutomationId="HorizontalScrollBar"
                                    Cursor="Arrow"
                                    Maximum="{TemplateBinding ScrollableWidth}"
                                    Minimum="0"
                                    Orientation="Horizontal"
                                    Style="{DynamicResource ViewerSrollBar}"
                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ViewerSrollBar" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Width" Value="10" />
                <Setter Property="MinWidth" Value="10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid
                                x:Name="Bg"
                                Background="Transparent"
                                SnapsToDevicePixels="true">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.00001*" />
                                </Grid.RowDefinitions>
                                <Track
                                    x:Name="PART_Track"
                                    Grid.Row="1"
                                    IsDirectionReversed="true"
                                    IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb
                                            Width="8"
                                            theme:ScrollChrome.ScrollGlyph="VerticalGripper"
                                            Style="{DynamicResource VerticalThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto" />
                        <Setter Property="MinWidth" Value="0" />
                        <Setter Property="Height" Value="10" />
                        <Setter Property="MinHeight" Value="10" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid
                                        x:Name="Bg"
                                        Background="Transparent"
                                        SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="0.00001*" />
                                        </Grid.ColumnDefinitions>
                                        <Track
                                            x:Name="PART_Track"
                                            Grid.Column="1"
                                            IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButton}" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButton}" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb
                                                    Height="8"
                                                    theme:ScrollChrome.ScrollGlyph="HorizontalGripper"
                                                    Style="{DynamicResource HorizontalThumb}" />
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="Transparent" />
            <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="Transparent" />
            <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="{DynamicResource DarkGrayColor}" />
            <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="Transparent" />
            <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="Transparent" />
            <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="{DynamicResource Foreground}" />
            <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="Transparent" />
            <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="Transparent" />
            <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="{DynamicResource Foreground}" />
            <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="Transparent" />
            <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="Transparent" />
            <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070" />
            <Style x:Key="ExpanderHeaderFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle
                                    Margin="0"
                                    SnapsToDevicePixels="true"
                                    Stroke="Black"
                                    StrokeDashArray="1 2"
                                    StrokeThickness="1" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid
                                    Margin="0 0 15 0"
                                    Background="Transparent"
                                    SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="19" />
                                    </Grid.ColumnDefinitions>
                                    <Ellipse
                                        x:Name="circle"
                                        Grid.Column="1"
                                        Width="19"
                                        Height="19"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Fill="{StaticResource Expander.Static.Circle.Fill}"
                                        Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                                    <Path
                                        x:Name="arrow"
                                        Grid.Column="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="F1 M 3.52 7.2 C 3.626667 7.093334 3.766666 7.040001 3.94 7.04 C 4.113333 7.040001 4.266666 7.093334 4.4 7.2 L 10 12.8 L 15.599999 7.2 C 15.759998 7.040001 15.959998 6.986668 16.199999 7.04 C 16.439999 7.093334 16.593332 7.240001 16.66 7.48 C 16.726665 7.720001 16.666666 7.933334 16.48 8.12 L 10.44 14.16 C 10.306665 14.266666 10.16 14.32 10 14.32 C 9.84 14.32 9.693333 14.266666 9.559999 14.16 L 3.52 8.12 C 3.386667 7.986668 3.32 7.833334 3.32 7.66 C 3.32 7.486668 3.386667 7.333334 3.52 7.2 Z "
                                        SnapsToDevicePixels="false"
                                        Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                        StrokeThickness="1" />
                                    <ContentPresenter
                                        Grid.Column="0"
                                        Margin="4 0 0 0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="True" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="arrow" Property="Data" Value="F1 M 3.52 13.12 C 3.626667 13.226667 3.766666 13.280001 3.94 13.280001 C 4.113333 13.280001 4.266666 13.226667 4.4 13.12 L 10 7.52 L 15.599999 13.12 C 15.759998 13.280001 15.959998 13.333334 16.199999 13.280001 C 16.439999 13.226666 16.593332 13.08 16.66 12.84 C 16.726665 12.6 16.666666 12.386667 16.48 12.2 L 10.44 6.16 C 10.306665 6.053333 10.16 6 10 6 C 9.84 6 9.693333 6.053333 9.559999 6.16 L 3.52 12.2 C 3.386667 12.333334 3.32 12.486668 3.32 12.66 C 3.32 12.833334 3.386667 12.986667 3.52 13.12 Z " />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                                    <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                                    <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                    <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                                    <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="180" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Ellipse
                                            x:Name="circle"
                                            Width="19"
                                            Height="19"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Fill="{StaticResource Expander.Static.Circle.Fill}"
                                            Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                                        <Path
                                            x:Name="arrow"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="F1 M 3.52 7.2 C 3.626667 7.093334 3.766666 7.040001 3.94 7.04 C 4.113333 7.040001 4.266666 7.093334 4.4 7.2 L 10 12.8 L 15.599999 7.2 C 15.759998 7.040001 15.959998 6.986668 16.199999 7.04 C 16.439999 7.093334 16.593332 7.240001 16.66 7.48 C 16.726665 7.720001 16.666666 7.933334 16.48 8.12 L 10.44 14.16 C 10.306665 14.266666 10.16 14.32 10 14.32 C 9.84 14.32 9.693333 14.266666 9.559999 14.16 L 3.52 8.12 C 3.386667 7.986668 3.32 7.833334 3.32 7.66 C 3.32 7.486668 3.386667 7.333334 3.52 7.2 Z "
                                            SnapsToDevicePixels="false"
                                            Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                            StrokeThickness="2" />
                                    </Grid>
                                    <ContentPresenter
                                        Grid.Column="1"
                                        Margin="4 0 0 0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="True" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="arrow" Property="Data" Value="F1 M 3.52 13.12 C 3.626667 13.226667 3.766666 13.280001 3.94 13.280001 C 4.113333 13.280001 4.266666 13.226667 4.4 13.12 L 10 7.52 L 15.599999 13.12 C 15.759998 13.280001 15.959998 13.333334 16.199999 13.280001 C 16.439999 13.226666 16.593332 13.08 16.66 12.84 C 16.726665 12.6 16.666666 12.386667 16.48 12.2 L 10.44 6.16 C 10.306665 6.053333 10.16 6 10 6 C 9.84 6 9.693333 6.053333 9.559999 6.16 L 3.52 12.2 C 3.386667 12.333334 3.32 12.486668 3.32 12.66 C 3.32 12.833334 3.386667 12.986667 3.52 13.12 Z " />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                                    <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                                    <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                    <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                                    <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="19" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="90" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Ellipse
                                            x:Name="circle"
                                            Width="19"
                                            Height="19"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Fill="{StaticResource Expander.Static.Circle.Fill}"
                                            Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                                        <Path
                                            x:Name="arrow"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="F1 M 3.52 7.2 C 3.626667 7.093334 3.766666 7.040001 3.94 7.04 C 4.113333 7.040001 4.266666 7.093334 4.4 7.2 L 10 12.8 L 15.599999 7.2 C 15.759998 7.040001 15.959998 6.986668 16.199999 7.04 C 16.439999 7.093334 16.593332 7.240001 16.66 7.48 C 16.726665 7.720001 16.666666 7.933334 16.48 8.12 L 10.44 14.16 C 10.306665 14.266666 10.16 14.32 10 14.32 C 9.84 14.32 9.693333 14.266666 9.559999 14.16 L 3.52 8.12 C 3.386667 7.986668 3.32 7.833334 3.32 7.66 C 3.32 7.486668 3.386667 7.333334 3.52 7.2 Z "
                                            SnapsToDevicePixels="false"
                                            Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                            StrokeThickness="2" />
                                    </Grid>
                                    <ContentPresenter
                                        Grid.Row="1"
                                        Margin="0 4 0 0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Top"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="True" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="arrow" Property="Data" Value="F1 M 3.52 13.12 C 3.626667 13.226667 3.766666 13.280001 3.94 13.280001 C 4.113333 13.280001 4.266666 13.226667 4.4 13.12 L 10 7.52 L 15.599999 13.12 C 15.759998 13.280001 15.959998 13.333334 16.199999 13.280001 C 16.439999 13.226666 16.593332 13.08 16.66 12.84 C 16.726665 12.6 16.666666 12.386667 16.48 12.2 L 10.44 6.16 C 10.306665 6.053333 10.16 6 10 6 C 9.84 6 9.693333 6.053333 9.559999 6.16 L 3.52 12.2 C 3.386667 12.333334 3.32 12.486668 3.32 12.66 C 3.32 12.833334 3.386667 12.986667 3.52 13.12 Z " />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                                    <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                                    <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                    <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                                    <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="19" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="-90" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Ellipse
                                            x:Name="circle"
                                            Width="19"
                                            Height="19"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Fill="{StaticResource Expander.Static.Circle.Fill}"
                                            Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                                        <Path
                                            x:Name="arrow"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="F1 M 3.52 7.2 C 3.626667 7.093334 3.766666 7.040001 3.94 7.04 C 4.113333 7.040001 4.266666 7.093334 4.4 7.2 L 10 12.8 L 15.599999 7.2 C 15.759998 7.040001 15.959998 6.986668 16.199999 7.04 C 16.439999 7.093334 16.593332 7.240001 16.66 7.48 C 16.726665 7.720001 16.666666 7.933334 16.48 8.12 L 10.44 14.16 C 10.306665 14.266666 10.16 14.32 10 14.32 C 9.84 14.32 9.693333 14.266666 9.559999 14.16 L 3.52 8.12 C 3.386667 7.986668 3.32 7.833334 3.32 7.66 C 3.32 7.486668 3.386667 7.333334 3.52 7.2 Z "
                                            SnapsToDevicePixels="false"
                                            Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                            StrokeThickness="2" />
                                    </Grid>
                                    <ContentPresenter
                                        Grid.Row="1"
                                        Margin="0 4 0 0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Top"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="True" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="arrow" Property="Data" Value="F1 M 3.52 13.12 C 3.626667 13.226667 3.766666 13.280001 3.94 13.280001 C 4.113333 13.280001 4.266666 13.226667 4.4 13.12 L 10 7.52 L 15.599999 13.12 C 15.759998 13.280001 15.959998 13.333334 16.199999 13.280001 C 16.439999 13.226666 16.593332 13.08 16.66 12.84 C 16.726665 12.6 16.666666 12.386667 16.48 12.2 L 10.44 6.16 C 10.306665 6.053333 10.16 6 10 6 C 9.84 6 9.693333 6.053333 9.559999 6.16 L 3.52 12.2 C 3.386667 12.333334 3.32 12.486668 3.32 12.66 C 3.32 12.833334 3.386667 12.986667 3.52 13.12 Z " />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                                    <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                                    <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                    <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                                    <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6"
                                SnapsToDevicePixels="true">
                                <DockPanel>
                                    <ToggleButton
                                        x:Name="HeaderSite"
                                        MinWidth="0"
                                        MinHeight="0"
                                        Margin="1"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                        DockPanel.Dock="Top"
                                        FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        FontStretch="{TemplateBinding FontStretch}"
                                        FontStyle="{TemplateBinding FontStyle}"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource ExpanderDownHeaderStyle}" />
                                    <ContentPresenter
                                        x:Name="ExpandSite"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        DockPanel.Dock="Bottom"
                                        Focusable="false"
                                        Visibility="Collapsed" />
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="true">
                                    <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Right">
                                    <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                                    <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                                    <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Up">
                                    <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                                    <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                                    <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Left">
                                    <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                                    <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                                    <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Fill="{TemplateBinding Background}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFF0F0F0" />
            <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#59ADFF" />
            <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#59ADFF" />
            <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#59ADFF" />
            <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#2491FF" />
            <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#2491FF" />
            <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#2491FF" />
            <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0" />
            <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9" />
            <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#59ADFF" />
            <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#59ADFF" />
            <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
                <Grid
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    UseLayoutRounding="True">
                    <Path
                        x:Name="grip"
                        VerticalAlignment="Center"
                        Data="M0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12Z"
                        Fill="{TemplateBinding Foreground}"
                        SnapsToDevicePixels="True"
                        Stretch="Fill"
                        Stroke="{TemplateBinding Foreground}"
                        StrokeThickness="1"
                        UseLayoutRounding="True" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
                <Grid
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    UseLayoutRounding="True">
                    <Path
                        x:Name="grip"
                        VerticalAlignment="Center"
                        Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z"
                        Fill="{TemplateBinding Foreground}"
                        SnapsToDevicePixels="True"
                        Stretch="Fill"
                        Stroke="{TemplateBinding Foreground}"
                        StrokeThickness="1"
                        UseLayoutRounding="True" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="grip" Property="Fill" Value="{TemplateBinding Foreground}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{TemplateBinding Foreground}" />
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Setter TargetName="grip" Property="Fill" Value="{TemplateBinding Foreground}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{TemplateBinding Foreground}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
                <Grid
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    UseLayoutRounding="True">
                    <Path
                        x:Name="grip"
                        VerticalAlignment="Center"
                        Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z"
                        Fill="{TemplateBinding Foreground}"
                        SnapsToDevicePixels="True"
                        Stretch="Fill"
                        Stroke="{TemplateBinding Foreground}"
                        StrokeThickness="1"
                        UseLayoutRounding="True" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="grip" Property="Fill" Value="{TemplateBinding Foreground}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{TemplateBinding Foreground}" />
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Setter TargetName="grip" Property="Fill" Value="{TemplateBinding Foreground}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{TemplateBinding Foreground}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
                <Border
                    x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TickBar
                            x:Name="TopTick"
                            Grid.Row="0"
                            Height="4"
                            Margin="0 0 0 2"
                            Fill="{TemplateBinding Foreground}"
                            Placement="Top"
                            Visibility="Collapsed" />
                        <TickBar
                            x:Name="BottomTick"
                            Grid.Row="2"
                            Height="4"
                            Margin="0 2 0 0"
                            Fill="{TemplateBinding Foreground}"
                            Placement="Bottom"
                            Visibility="Collapsed" />
                        <Border
                            x:Name="TrackBackground"
                            Grid.Row="1"
                            Height="4.0"
                            Margin="5 0"
                            VerticalAlignment="center"
                            Background="{TemplateBinding Foreground}"
                            BorderBrush="{TemplateBinding Foreground}"
                            BorderThickness="1"
                            CornerRadius="2">
                            <Canvas Margin="-6 -1">
                                <Rectangle
                                    x:Name="PART_SelectionRange"
                                    Height="4.0"
                                    Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                    Visibility="Hidden" />
                            </Canvas>
                        </Border>
                        <Track x:Name="PART_Track" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb
                                    x:Name="Thumb"
                                    Width="15"
                                    Height="15"
                                    VerticalAlignment="Center"
                                    Focusable="False"
                                    OverridesDefaultStyle="True"
                                    Template="{StaticResource SliderThumbHorizontalDefault}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="TickPlacement" Value="TopLeft">
                        <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbHorizontalTop}" />
                        <Setter TargetName="TrackBackground" Property="Margin" Value="5 2 5 0" />
                    </Trigger>
                    <Trigger Property="TickPlacement" Value="BottomRight">
                        <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbHorizontalBottom}" />
                        <Setter TargetName="TrackBackground" Property="Margin" Value="5 0 5 2" />
                    </Trigger>
                    <Trigger Property="TickPlacement" Value="Both">
                        <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                        <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="IsSelectionRangeEnabled" Value="true">
                        <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
                <Grid
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    UseLayoutRounding="True">
                    <Path
                        x:Name="grip"
                        Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z"
                        Fill="{TemplateBinding Foreground}"
                        Stretch="Fill"
                        Stroke="{TemplateBinding Foreground}" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="grip" Property="Fill" Value="{TemplateBinding Foreground}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{TemplateBinding Foreground}" />
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Setter TargetName="grip" Property="Fill" Value="{TemplateBinding Foreground}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{TemplateBinding Foreground}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
                <Grid
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    UseLayoutRounding="True">
                    <Path
                        x:Name="grip"
                        Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z"
                        Fill="{TemplateBinding Foreground}"
                        Stretch="Fill"
                        Stroke="{TemplateBinding Foreground}" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.MouseOver.Border}" />
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Pressed.Background}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Pressed.Border}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
                <Grid
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    UseLayoutRounding="True">
                    <Path
                        x:Name="grip"
                        Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z"
                        Fill="{TemplateBinding Foreground}"
                        Stretch="Fill"
                        Stroke="{TemplateBinding Foreground}" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="grip" Property="Fill" Value="{TemplateBinding Foreground}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{TemplateBinding Foreground}" />
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Pressed.Background}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Pressed.Border}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                        <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
                <Border
                    x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TickBar
                            x:Name="TopTick"
                            Grid.Column="0"
                            Width="4"
                            Margin="0 0 2 0"
                            Fill="{TemplateBinding Foreground}"
                            Placement="Left"
                            Visibility="Collapsed" />
                        <TickBar
                            x:Name="BottomTick"
                            Grid.Column="2"
                            Width="4"
                            Margin="2 0 0 0"
                            Fill="{TemplateBinding Foreground}"
                            Placement="Right"
                            Visibility="Collapsed" />
                        <Border
                            x:Name="TrackBackground"
                            Grid.Column="1"
                            Width="4.0"
                            Margin="0 5"
                            HorizontalAlignment="center"
                            Background="{StaticResource SliderThumb.Track.Background}"
                            BorderBrush="{TemplateBinding Foreground}"
                            BorderThickness="1">
                            <Canvas Margin="-1 -6">
                                <Rectangle
                                    x:Name="PART_SelectionRange"
                                    Width="4.0"
                                    Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                    Visibility="Hidden" />
                            </Canvas>
                        </Border>
                        <Track x:Name="PART_Track" Grid.Column="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb
                                    x:Name="Thumb"
                                    Width="18"
                                    Height="11"
                                    VerticalAlignment="Top"
                                    Background="{TemplateBinding Foreground}"
                                    Focusable="False"
                                    OverridesDefaultStyle="True"
                                    Template="{StaticResource SliderThumbVerticalDefault}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="TickPlacement" Value="TopLeft">
                        <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbVerticalLeft}" />
                        <Setter TargetName="TrackBackground" Property="Margin" Value="2 5 0 5" />
                    </Trigger>
                    <Trigger Property="TickPlacement" Value="BottomRight">
                        <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbVerticalRight}" />
                        <Setter TargetName="TrackBackground" Property="Margin" Value="0 5 2 5" />
                    </Trigger>
                    <Trigger Property="TickPlacement" Value="Both">
                        <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                        <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="IsSelectionRangeEnabled" Value="true">
                        <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="true">
                        <Setter TargetName="Thumb" Property="Foreground" Value="{TemplateBinding Foreground}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="SliderStyle1" TargetType="{x:Type Slider}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}" />
                <Setter Property="Template" Value="{StaticResource SliderHorizontal}" />
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Template" Value="{StaticResource SliderVertical}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="AllowDrop" Value="true" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="MinHeight" Value="0" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Background="Transparent"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="ComboBox.Static.Background" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="Transparent" />
                <GradientStop Offset="1.0" Color="Transparent" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Static.Border" Color="{DynamicResource Accent}" />
            <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="{DynamicResource Accent}" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="Transparent" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent" />
            <SolidColorBrush x:Key="TextBox.Static.Background" Color="Transparent" />
            <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="{DynamicResource Accent}" />
                <GradientStop Offset="1.0" Color="{DynamicResource Accent}" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="{DynamicResource LightAccent}" />
            <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#fff" />
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="Transparent" />
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="{DynamicResource LightAccent}" />
            <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="{DynamicResource LightAccent}" />
                <GradientStop Offset="1.0" Color="{DynamicResource LightAccent}" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="{DynamicResource LightAccent}" />
            <LinearGradientBrush x:Key="ComboBox.Pressed.Background" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="{DynamicResource Accent}" />
                <GradientStop Offset="1.0" Color="{DynamicResource Accent}" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="{DynamicResource Accent}" />
            <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#fff" />
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="Transparent" />
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="{DynamicResource Accent}" />
            <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="{DynamicResource Accent}" />
                <GradientStop Offset="1.0" Color="{DynamicResource Accent}" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="{DynamicResource Accent}" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="Transparent" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent" />
            <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="ClickMode" Value="Press" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border
                                x:Name="templateRoot"
                                Background="{StaticResource ComboBox.Static.Background}"
                                BorderBrush="{StaticResource ComboBox.Static.Border}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                SnapsToDevicePixels="true">
                                <Border
                                    x:Name="splitBorder"
                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                    Margin="0"
                                    HorizontalAlignment="Right"
                                    BorderBrush="Transparent"
                                    BorderThickness="1"
                                    CornerRadius="4"
                                    SnapsToDevicePixels="true">
                                    <Path
                                        x:Name="arrow"
                                        Margin="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                        Fill="{StaticResource ComboBox.Static.Glyph}" />
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Border}" />
                                    <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                                    <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Border}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                                    <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                                    <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Pressed.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Border}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                                    <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                                    <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Disabled.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Border}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                                    <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                                    <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
                <Grid
                    x:Name="templateRoot"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                    </Grid.ColumnDefinitions>
                    <Popup
                        x:Name="PART_Popup"
                        Grid.ColumnSpan="2"
                        Margin="1"
                        AllowsTransparency="true"
                        IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Placement="Bottom"
                        PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <theme:SystemDropShadowChrome
                            x:Name="shadow"
                            MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Color="Transparent">
                            <Border
                                x:Name="dropDownBorder"
                                Background="{DynamicResource Background1}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                BorderThickness="1"
                                CornerRadius="5">
                                <ScrollViewer x:Name="DropDownScrollViewer" Style="{DynamicResource ScrollViewerStyle}">
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas
                                            x:Name="canvas"
                                            Width="0"
                                            Height="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top">
                                            <Rectangle
                                                x:Name="opaqueRect"
                                                Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                Fill="{Binding Background, ElementName=dropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter
                                            x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </theme:SystemDropShadowChrome>
                    </Popup>
                    <ToggleButton
                        x:Name="toggleButton"
                        Grid.ColumnSpan="2"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{StaticResource ComboBoxToggleButton}" />
                    <ContentPresenter
                        x:Name="contentPresenter"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding SelectionBoxItem}"
                        ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        IsHitTestVisible="false"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                        <Setter TargetName="shadow" Property="Margin" Value="0 0 5 5" />
                        <Setter TargetName="shadow" Property="Color" Value="#71000000" />
                    </Trigger>
                    <Trigger Property="HasItems" Value="false">
                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="true" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                    </MultiTrigger>
                    <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                    </Grid.ColumnDefinitions>
                    <Popup
                        x:Name="PART_Popup"
                        Grid.ColumnSpan="2"
                        AllowsTransparency="true"
                        IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                        Placement="Bottom"
                        PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <theme:SystemDropShadowChrome
                            x:Name="shadow"
                            MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Color="Transparent">
                            <Border
                                x:Name="dropDownBorder"
                                Background="{DynamicResource Background1}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                BorderThickness="1"
                                CornerRadius="5">
                                <ScrollViewer x:Name="DropDownScrollViewer" Style="{DynamicResource ScrollViewerStyle}">
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas
                                            x:Name="canvas"
                                            Width="0"
                                            Height="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top">
                                            <Rectangle
                                                x:Name="opaqueRect"
                                                Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                Fill="{Binding Background, ElementName=dropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter
                                            x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </theme:SystemDropShadowChrome>
                    </Popup>
                    <ToggleButton
                        x:Name="toggleButton"
                        Grid.ColumnSpan="2"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{StaticResource ComboBoxToggleButton}" />
                    <Border
                        x:Name="border"
                        Margin="{TemplateBinding BorderThickness}"
                        Background="Transparent">
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            Margin="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ComboBoxEditableTextBox}" />
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter TargetName="border" Property="Opacity" Value="0.56" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="true">
                        <Setter Property="Foreground" Value="Black" />
                    </Trigger>
                    <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                        <Setter TargetName="shadow" Property="Margin" Value="0 0 5 5" />
                        <Setter TargetName="shadow" Property="Color" Value="#71000000" />
                    </Trigger>
                    <Trigger Property="HasItems" Value="false">
                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="true" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                    </MultiTrigger>
                    <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColor}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="Padding" Value="6 3 5 3" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
                <Style.Triggers>
                    <Trigger Property="IsEditable" Value="true">
                        <Setter Property="IsTabStop" Value="false" />
                        <Setter Property="Padding" Value="2" />
                        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
                    </Trigger>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="#fff" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="FocusVisual1">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle
                                Margin="2"
                                SnapsToDevicePixels="true"
                                Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                StrokeDashArray="1 2"
                                StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
            <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="White" />
            <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="Transparent" />
            <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="{DynamicResource Accent}" />
            <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="White" />
            <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="Transparent" />
            <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="{DynamicResource Accent}" />
            <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="WhiteSmoke" />
            <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
            <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
            <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
            <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}" />
                <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid
                                x:Name="templateRoot"
                                Background="Transparent"
                                SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border
                                    x:Name="checkBoxBorder"
                                    Width="15"
                                    Height="15"
                                    Margin="1"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    BorderBrush="{DynamicResource AccentColor}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2">
                                    <Grid x:Name="markGrid">
                                        <Path
                                            x:Name="optionMark"
                                            Margin="1"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                            Fill="{StaticResource OptionMark.Static.Glyph}"
                                            Opacity="0"
                                            Stretch="None" />
                                        <Rectangle
                                            x:Name="indeterminateMark"
                                            Margin="2"
                                            Fill="{StaticResource OptionMark.Static.Glyph}"
                                            Opacity="0" />
                                    </Grid>
                                </Border>
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="true">

                                    <Setter Property="Padding" Value="4 -1 0 0" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.MouseOver.Background}" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.MouseOver.Border}" />
                                    <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                    <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Disabled.Background}" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
                                    <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                    <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Pressed.Background}" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Pressed.Border}" />
                                    <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                    <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                    <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource AccentColor}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                                    <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MenuStyle" TargetType="MenuItem">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Foreground" Value="{DynamicResource Background1}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="MenuItem">
                            <Border
                                x:Name="Border"
                                MinWidth="100"
                                Padding="2"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5">
                                <ContentPresenter Margin="2" ContentSource="Header" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource Background2}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ContextMenuStyle" TargetType="ContextMenu">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border
                                Margin="10"
                                Padding="5"
                                Background="{DynamicResource Background1}"
                                CornerRadius="5">
                                <ScrollViewer
                                    Uid="ScrollViewer_9"
                                    CanContentScroll="True"
                                    Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                                  TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <ItemsPresenter
                                        Margin="{TemplateBinding Padding}"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>

                                <Border.Effect>
                                    <DropShadowEffect
                                        BlurRadius="15"
                                        Direction="135"
                                        Opacity="0.2"
                                        ShadowDepth="0"
                                        Color="#000" />
                                </Border.Effect>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="HasDropShadow" Value="True" />
                <Setter Property="Foreground" Value="{DynamicResource Foreground1}" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToolTip">
                            <Border
                                Name="Border"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Margin="5"
                                Background="{DynamicResource Background1}"
                                BorderBrush="{DynamicResource LightAccentColor}"
                                BorderThickness="1">
                                <Border.Effect>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        Direction="270"
                                        Opacity="0.1"
                                        ShadowDepth="0"
                                        Color="{DynamicResource Accent}" />
                                </Border.Effect>
                                <ContentPresenter
                                    Margin="4 2 4 4"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="true">
                                    <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                                    <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
